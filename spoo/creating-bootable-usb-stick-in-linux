Creating Bootable Linux USB Drive from the Command Line

In this section, we will show you how to create a bootable Linux USB stick from the command line using the dd tool. This tool is available on all macOS and Linux systems.

This is a quick and easy process and requires no additional software to be installed.

    Insert the USB flash drive into the USB port.

    Next, you need to find out the name of the USB drive. The best tool for this job is lsblk:

   #1 lsblk

    The output will look something like this:

    NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
    sda           8:0    0 465.8G  0 disk 
    └─sda1        8:1    0 465.8G  0 part /data
    sdx           8:16   1   7.5G  0 disk 
    └─sdx1        8:17   1   7.5G  0 part /run/media/linuxize/Kingston
    nvme0n1     259:0    0 232.9G  0 disk 
    ├─nvme0n1p1 259:1    0   512M  0 part /boot
    ├─nvme0n1p2 259:2    0    16G  0 part [SWAP]
    └─nvme0n1p3 259:3    0 216.4G  0 part /

    In this case the name of the USB device is /dev/sdx but this may vary on your system.

    On most Linux distributions the USB flash drive will be automatically mounted when inserted. Before flashing the image you need to unmount the USB device. To do so use the umount command followed by either the mount point or the device name:

   #2 sudo umount /dev/sdx1

    The last step is to flash the ISO image to the USB drive. Make sure you replace /dev/sdx with your drive and do not append the partition number. Also, make sure you are using the correct path to the ISO file.

   #3 sudo dd bs=4M if=/path/to/ubuntu-18.04.2-desktop-amd64.iso of=/dev/sdx status=progress oflag=sync

    The command will show a progress bar while flashing the image and the process may take several minutes:

    458+1 records in
    458+1 records out
    1921843200 bytes (1.9 GB, 1.8 GiB) copied, 147.006 s, 13 MB/s
